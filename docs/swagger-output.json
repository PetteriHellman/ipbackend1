{
  "openapi": "3.0.0",
  "info": {
    "title": "IP address app API",
    "description": "IP address reservation application API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/"
    }
  ],
  "paths": {
    "/api/ips/": {
      "get": {
        "tags": [
          "IP address"
        ],
        "summary": "Endpoint for get all IP address for admins.",
        "description": "Endpoint for get all IP address for admins.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "IP address"
        ],
        "summary": "Endpoint for save IP address for admins.",
        "description": "Endpoint for save IP address for admins.",
        "parameters": [
          {
            "name": "ip,desc,TTL",
            "in": "body",
            "description": {
              "$ip": "IP address",
              "$desc": "Description for IP address",
              "$TTL": "TTL (Time-to-Live) value for IP address in days"
            },
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ip": {
                  "type": "string",
                  "example": "192.168.0.1"
                },
                "desc": {
                  "type": "string",
                  "example": "Some description"
                },
                "TTL": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "ip",
                "desc",
                "TTL"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TTL": {
                    "example": "any"
                  },
                  "ip": {
                    "example": "any"
                  },
                  "desc": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ips/{userid}": {
      "get": {
        "tags": [
          "IP address"
        ],
        "summary": "Endpoint for get IP",
        "description": "Endpoint for get IP",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/ips/next-ip": {
      "post": {
        "tags": [
          "Autogen IP address"
        ],
        "summary": "Endpoint for provide next free IP address.",
        "description": "Endpoint for provide next free IP address.",
        "parameters": [
          {
            "name": "desc,amount",
            "in": "body",
            "description": {
              "$desc": "Description for IP address",
              "$amount": "Amount of ip addresses needed"
            },
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "desc": {
                  "type": "string",
                  "example": "Some description"
                },
                "amount": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "desc",
                "amount"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "example": "any"
                  },
                  "desc": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ips/next-ip/{id}": {
      "put": {
        "tags": [
          "Autogen IP address"
        ],
        "summary": "Endpoint for provide next free IP address confirm.",
        "description": "Endpoint for provide next free IP address confirm.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "desc,TTL",
            "in": "body",
            "description": {
              "$desc": "Description for IP address",
              "$TTL": "TTL (Time-to-Live) value for IP address in days"
            },
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "desc": {
                  "type": "string",
                  "example": "Some description"
                },
                "TTL": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "desc",
                "TTL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TTL": {
                    "example": "any"
                  },
                  "desc": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ips/{id}": {
      "get": {
        "tags": [
          "IP address"
        ],
        "summary": "Endpoint for get single IP address.",
        "description": "Endpoint for get single IP address.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "IP address"
        ],
        "summary": "Endpoint for edit single IP address and/or description.",
        "description": "Endpoint for edit single IP address and/or description.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "desc,ip",
            "in": "body",
            "description": {
              "$desc": "New description for IP address",
              "$ip": "IP address what you want edit"
            },
            "schema": {
              "type": "object",
              "properties": {
                "desc": {
                  "type": "string",
                  "example": "Some new description"
                },
                "ip": {
                  "type": "string",
                  "example": "192.168.0.2"
                }
              },
              "required": [
                "desc",
                "ip"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "example": "any"
                  },
                  "desc": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ips/{ids}": {
      "delete": {
        "tags": [
          "IP address"
        ],
        "summary": "Endpoint for delete IP addresses.",
        "description": "Endpoint for delete IP addresses.",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "Endpoint for create a new user",
        "description": "Endpoint for create a new user",
        "parameters": [
          {
            "name": "email,name,password,group",
            "in": "body",
            "required": {
              "$email": "true",
              "$name": "true",
              "$password": "true"
            },
            "description": {
              "$email": "Email for user",
              "$name": "Name for user",
              "$password": "Password for user",
              "$group": "Group for user"
            },
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "joh.doe@email.com"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              },
              "required": [
                "email",
                "name",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "group": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint for get all users",
        "description": "Endpoint for get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{userid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint for get user",
        "description": "Endpoint for get user",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint for delete user and ip addresses belong to it",
        "description": "Endpoint for delete user and ip addresses belong to it",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}/role": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint for change role",
        "description": "Endpoint for change role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "body",
            "description": {
              "$role": "Admin or user role"
            },
            "schema": {
              "$ref": "#/components/schemas/role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/passwordChange/": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint for change user passwords.",
        "description": "Endpoint for change user passwords.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login/": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Endpoint to sign in a specific user.",
        "description": "Endpoint to sign in a specific user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/network/": {
      "post": {
        "tags": [
          "Network"
        ],
        "summary": "Endpoint for make a new network",
        "description": "Endpoint for make a new network",
        "parameters": [
          {
            "name": "networkName,hostMin,hostMax,hostNetwork,networkActive",
            "in": "body",
            "description": {
              "$networkName": "Name for network",
              "$hostMin": "Min IP address for range of hosted IP address",
              "$hostMax": "Max IP address for range of hosted IP address",
              "$hostNetwork": "Subnet for host network without / mark",
              "$networkActive": "True or false if this netwoork is active"
            },
            "schema": {
              "type": "object",
              "properties": {
                "networkName": {
                  "type": "string",
                  "example": "SomeNetwork"
                },
                "hostMin": {
                  "type": "string",
                  "example": "192.168.0.100"
                },
                "hostMax": {
                  "type": "string",
                  "example": "192.168.0.200"
                },
                "hostNetwork": {
                  "type": "number",
                  "example": 24
                }
              },
              "required": [
                "networkName",
                "hostMin",
                "hostMax",
                "hostNetwork"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "networkName": {
                    "example": "any"
                  },
                  "hostMin": {
                    "example": "any"
                  },
                  "hostMax": {
                    "example": "any"
                  },
                  "hostNetwork": {
                    "example": "any"
                  },
                  "networkActive": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Network"
        ],
        "summary": "Endpoint for get all networks",
        "description": "Endpoint for get all networks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/admin/network/{id}": {
      "put": {
        "tags": [
          "Network"
        ],
        "summary": "Endpoint for make network active",
        "description": "Endpoint for make network active",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "networkActive": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/adminchangepass/{id}": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint for change anyone passwords.",
        "description": "Endpoint for change anyone passwords.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "name": "Authorization",
        "description": "Bearer Token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "John Doe"
              }
            }
          },
          "email": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "john.doe@mail.com"
              }
            }
          },
          "password": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "12345678"
              }
            }
          },
          "group": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "SomeGroup"
              }
            }
          }
        }
      },
      "IP": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "192.168.0.1"
              }
            }
          },
          "desc": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "Some description"
              }
            }
          },
          "TTL": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              },
              "example": {
                "type": "string",
                "example": "1"
              }
            }
          }
        }
      },
      "Network": {
        "type": "object",
        "properties": {
          "networkName": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "SomeNetwork"
              }
            }
          },
          "hostMin": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "192.168.0.100"
              }
            }
          },
          "hostMax": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "192.168.0.200"
              }
            }
          },
          "hostNetwork": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              },
              "example": {
                "type": "string",
                "example": "24"
              }
            }
          },
          "networkActive": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "boolean"
              },
              "example": {
                "type": "string",
                "example": "true"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "role": {
        "@enum": [
          "admin",
          "user",
          "null"
        ]
      }
    }
  }
}